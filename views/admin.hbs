<script>
    function applySorting(column, order) {
        let tbody = document.querySelector("#reservation-table tbody");
        let rows = Array.from(tbody.querySelectorAll("tr"));

        rows.sort((a, b) => {
            let valA = a.cells[column === 'start_datetime' ? 3 : column === 'end_datetime' ? 4 : 5].innerText;
            let valB = b.cells[column === 'start_datetime' ? 3 : column === 'end_datetime' ? 4 : 5].innerText;
            
            if (column.includes("datetime")) {
                valA = new Date(valA);
                valB = new Date(valB);
                return order === "earliest" ? valA - valB : valB - valA;
            } else {
                return order === "A-Z" ? valA.localeCompare(valB) : valB.localeCompare(valA);
            }
        });

        tbody.innerHTML = ""; // Clear existing content
        rows.forEach(row => tbody.appendChild(row)); // Append sorted rows back
    }
</script>

<script>
    function toggleAllCheckboxes(mainCheckbox, groupSelector) {
        const checkboxes = document.querySelectorAll(`${groupSelector} input[type=checkbox]`);
        checkboxes.forEach(cb => {
            if (cb !== mainCheckbox) cb.checked = mainCheckbox.checked;
        });
    }

    function updateAllCheckbox(mainCheckboxId, groupSelector) {
        const mainCheckbox = document.getElementById(mainCheckboxId);
        const checkboxes = document.querySelectorAll(`${groupSelector} input[type=checkbox]:not(#${mainCheckboxId})`);
        mainCheckbox.checked = Array.from(checkboxes).every(cb => cb.checked);
    }

    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("labAll").addEventListener("change", function () {
            toggleAllCheckboxes(this, "#filterLab");
        });

        document.getElementById("statusAll").addEventListener("change", function () {
            toggleAllCheckboxes(this, "#filterStatus");
        });

        document.querySelectorAll("#filterLab input[type=checkbox]:not(#labAll)").forEach(cb => {
            cb.addEventListener("change", function () {
                updateAllCheckbox("labAll", "#filterLab");
            });
        });

        document.querySelectorAll("#filterStatus input[type=checkbox]:not(#statusAll)").forEach(cb => {
            cb.addEventListener("change", function () {
                updateAllCheckbox("statusAll", "#filterStatus");
            });
        });
    });
</script>




<body>
    <div class="content-area-admin">
            <div class="container mt-5">
                <!-- Filtering Options -->
                <div class="card p-3 mb-3">
                    <h5>Filter Reservations</h5>
                    <div class="row g-2">
                        <div class="col-md-3">
                            <label class="form-label">Lab</label>
                            <div id="filterLab">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="labAll" value="All">
                                    <label class="form-check-label" for="labAll">All</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="labAG601" value="AG601">
                                    <label class="form-check-label" for="labAG601">AG601</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="labGK602" value="GK602">
                                    <label class="form-check-label" for="labGK602">GK602</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="labSJ603" value="SJ603">
                                    <label class="form-check-label" for="labSJ603">SJ603</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="labVL604" value="VL604">
                                    <label class="form-check-label" for="labVL604">VL604</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="labY605" value="Y605">
                                    <label class="form-check-label" for="labY605">Y605</label>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-3">
                            <label class="form-label">Status</label>
                            <div id="filterStatus">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="statusAll" value="All">
                                    <label class="form-check-label" for="statusAll">All</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="statusReserved" value="Reserved">
                                    <label class="form-check-label" for="statusReserved">Reserved</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="statusCanceled" value="Canceled">
                                    <label class="form-check-label" for="statusCanceled">Canceled</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="statusCompleted" value="Completed">
                                    <label class="form-check-label" for="statusCompleted">Completed</label>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <label for="filterStartDate" class="form-label">Start Date & Time</label>
                            <input type="datetime-local" id="filterStartDate" class="form-control">
                        </div>
                        <div class="col-md-3">
                            <label for="filterEndDate" class="form-label">End Date & Time</label>
                            <input type="datetime-local" id="filterEndDate" class="form-control">
                        </div>
                        <div class="col-md-3">
                            <label for="filterRequester" class="form-label">Requester’s Name</label>
                            <input type="text" id="filterRequester" class="form-control" placeholder="Enter name">
                        </div>
                        <div class="col-md-3">
                            <label for="filterCredited" class="form-label">Credited Individuals</label>
                            <input type="text" id="filterCredited" class="form-control" placeholder="Enter names (comma-separated)">
                        </div>
                        <div class="col-md-3">
                            <label for="filterPurpose" class="form-label">Purpose</label>
                            <input type="text" id="filterPurpose" class="form-control" placeholder="e.g., nahida appreciation">
                        </div>
                        <div class="col-md-3 align-self-end">
                        <button id="applyFiltersBtn" class="btn btn-primary w-100">Apply Filters</button>
                    </div>

                    </div>
                </div>
                
                <!-- Tabs for Reservation Categories -->
            <ul class="nav nav-tabs" id="adminReservationTabs">
                <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#all-reservations">All Reservations</a></li>
                <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#upcoming-reservations">Upcoming Reservations</a></li>
            </ul>

            <!-- Tab Content -->
            <div class="tab-content mt-3">
                <!-- All Reservations -->
                <div class="tab-pane fade show active" id="all-reservations">
                    <table id="reservation-table" class="table table-bordered table-hover">

                        <thead class="table-primary">
                         <tr>
                                <th>Reservation ID</th>
                                <th>Lab</th>
                                <th>Lab Slot/s</th>
                                <th>
                                    Start Date & Time
                                    <select class="form-select form-select-sm" id="start-time-filter" onchange="applySorting('start_datetime', this.value)">
                                        <option value="earliest">Earliest First</option>
                                        <option value="latest">Latest First</option>
                                    </select>
                                </th>
                                <th>
                                    End Date & Time
                                    <select class="form-select form-select-sm" id="end-time-filter" onchange="applySorting('end_datetime', this.value)">
                                        <option value="earliest">Earliest First</option>
                                        <option value="latest">Latest First</option>
                                    </select>
                                </th>
                                <th>
                                    Requester’s Name
                                    <select class="form-select form-select-sm" id="requester-filter" onchange="applySorting('requester_name', this.value)">
                                        <option value="A-Z">A-Z</option>
                                        <option value="Z-A">Z-A</option>
                                    </select>
                                </th>

                                <th>Credited Individuals</th>
                                <th>Purpose</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{#each allReservations}}
                            <tr>
                                <td>{{this.id}}</td>
                                <td>{{this.lab_name}}</td>
                                <td>{{this.slots}}</td>
                                <td>{{this.start_datetime}}</td>
                                <td>{{this.end_datetime}}</td>
                                <td>{{this.requester_name}}</td>
                                <td>{{this.reservers}}</td>
                                <td>{{this.purpose}}</td>
                                <td><span class="badge {{#if (eq this.status 'Reserved')}}bg-success{{else}}bg-danger{{/if}}">{{this.status}}</span></td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>

                <!-- Upcoming Reservations -->
                <div class="tab-pane fade" id="upcoming-reservations">
                    <table class="table table-bordered table-hover">
                        <thead class="table-primary">
                            <tr>
                                <th>Reservation ID</th>
                                <th>Lab</th>
                                <th>Lab Slot/s</th>
                                <th>Start Date & Time</th>
                                <th>End Date & Time</th>
                                <th>Requester’s Name</th>
                                <th>Reservers</th>
                                <th>Purpose</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{#each upcomingReservations}}
                            <tr>
                                <td>{{this.id}}</td>
                                <td>{{this.lab_name}}</td>
                                <td>{{this.slots}}</td>
                                <td>{{this.start_datetime}}</td>
                                <td>{{this.end_datetime}}</td>
                                <td>{{this.requester_name}}</td>
                                <td>{{this.reservers}}</td>
                                <td>{{this.purpose}}</td>
                                <td><span class="badge bg-success">Reserved</span></td>
                                <td>
                                    <a href="/edit-reservations/{{this.id}}">
                                        <button class="btn btn-warning btn-sm">Edit</button>
                                    </a>
                                    <button class="btn btn-danger btn-sm" onclick="cancelReservation('{{this.id}}')">Cancel</button>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
    function cancelReservation(reservationId) {
        if (confirm("Are you sure you want to cancel this reservation?")) {
            fetch('/api/reservations/cancel', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: reservationId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Reservation canceled successfully!");
                    location.reload(); // Reload page to update UI
                } else {
                    alert("Error canceling reservation.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Failed to cancel reservation.");
            });
        }
    }
    </script>

   
<script>
    function applyFilters() {
        const selectedLabs = Array.from(document.querySelectorAll('#filterLab input[type=checkbox]:checked'))
            .map(cb => cb.value);
        const selectedStatuses = Array.from(document.querySelectorAll('#filterStatus input[type=checkbox]:checked'))
            .map(cb => cb.value);
        let startDate = document.getElementById("filterStartDate").value;
        let endDate = document.getElementById("filterEndDate").value;
        const requesterName = document.getElementById("filterRequester").value.trim();
        const creditedIndividuals = document.getElementById("filterCredited").value.trim();
        const purpose = document.getElementById("filterPurpose").value.trim();

        console.log("🔄 Sending Filters to Backend:");
        console.log("Start Date (Raw):", startDate);
        console.log("End Date (Raw):", endDate);

        // Determine which tab is active
        const activeTab = document.querySelector("#adminReservationTabs .nav-link.active").getAttribute("href");
        const isUpcomingTab = activeTab === "#upcoming-reservations";

        fetch('/api/filter-reservations', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                labs: selectedLabs.length ? selectedLabs : null,
                statuses: selectedStatuses.length ? selectedStatuses : null,
                start_date: startDate || null,
                end_date: endDate || null,
                requester_name: requesterName || null,
                credited_individuals: creditedIndividuals || null,
                purpose: purpose || null,
                upcoming_only: isUpcomingTab
            })
        })
        .then(response => response.json())
        .then(data => {
            let tableId = isUpcomingTab ? "#upcoming-reservations tbody" : "#reservation-table tbody";
            const tbody = document.querySelector(tableId);
            tbody.innerHTML = ""; // Clear previous content

            if (data.reservations.length === 0) {
                tbody.innerHTML = `<tr><td colspan="10" class="text-center">No reservations found</td></tr>`;
                return;
            }

            let rows = data.reservations.map(reservation => `
                <tr>
                    <td>${reservation.id}</td>
                    <td>${reservation.lab_name}</td>
                    <td>${reservation.slots}</td>
                    <td>${reservation.start_datetime}</td>
                    <td>${reservation.end_datetime}</td>
                    <td>${reservation.requester_name}</td>
                    <td>${reservation.reservers}</td>
                    <td>${reservation.purpose}</td>
                    <td>
                        <span class="badge ${reservation.status === 'Reserved' ? 'bg-success' : 'bg-danger'}">
                            ${reservation.status}
                        </span>
                    </td>
                    ${isUpcomingTab ? `
                    <td>
                        <a href="/edit-reservations/${reservation.id}">
                            <button class="btn btn-warning btn-sm">Edit</button>
                        </a>
                        <button class="btn btn-danger btn-sm" onclick="cancelReservation('${reservation.id}')">Cancel</button>
                    </td>` : ''}
                </tr>
            `).join('');

            tbody.innerHTML = rows;
        })
        .catch(error => {
            console.error("❌ Error fetching reservations:", error);
            alert("Failed to filter reservations.");
        });
    }

    document.querySelector("#applyFiltersBtn").addEventListener("click", applyFilters);
</script>
</body>