<body class="d-flex flex-column min-vh-100">
<section class="content-section flex-grow-1 d-flex flex-column justify-content-center">
    <div class="container mt-3" style="max-width: 600px;">
        <h2 class="mb-4">Reserve Your Slot</h2>

        <!-- Building Selection -->
        <div class="mb-3">
            <label for="building" class="form-label d-block text-start">Choose a Building:</label>
            <select id="building" class="form-select w-100">
                <option value="" disabled selected>Loading buildings...</option>
            </select>
        </div>

        <!-- Lab Selection -->
        <div class="mb-3">
            <label for="lab" class="form-label d-block text-start">Choose a Lab:</label>
            <select id="lab" class="form-select w-100">
                <option value="" disabled selected>Select a building first</option>
            </select>
        </div>

        <!-- Date Selection -->
        <div class="mb-3">
            <label for="date" class="form-label d-block text-start">Select a Date:</label>
            <input type="date" id="date" class="form-control w-100">
        </div>

        <!-- Time Selection -->
        <div class="mb-3">
            <label for="start-time" class="form-label d-block text-start">Start Time:</label>
            <select id="start-time" class="form-select w-100">
                <option value="" disabled selected>Select start time</option>
            </select>
        </div>

        <div class="mb-3">
            <label for="end-time" class="form-label d-block text-start">End Time:</label>
            <select id="end-time" class="form-select w-100">
                <option value="" disabled selected>Select end time</option>
            </select>
        </div>

        <!-- Seat Selection -->
        <div class="mb-3">
            <label for="seat" class="form-label d-block text-start">Select an Available Seat:</label>
            <select id="seat" class="form-select w-100">
                <option value="" disabled selected>Loading seats...</option>
            </select>
        </div>

        <!-- Anonymous Option -->
        <div class="form-check mb-3 text-start">
            <input type="checkbox" class="form-check-input" id="anonymous">
            <label class="form-check-label" for="anonymous">Reserve Anonymously</label>
        </div>

        <!-- Reserve Button -->
        <div class="text-center">
            <button class="btn btn-primary btn-lg w-100" id="reserveButton">Reserve</button>
        </div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const startTimeSelect = document.getElementById("start-time");
        const endTimeSelect = document.getElementById("end-time");
        const buildingSelect = document.getElementById("building");
        const labSelect = document.getElementById("lab");

        // Placeholder: Simulate loading buildings from a database
        setTimeout(() => {
            const buildings = ["Engineering Building", "Science Hall", "Technology Center"];
            buildings.forEach(building => {
                const option = new Option(building, building);
                buildingSelect.appendChild(option);
            });
        }, 500);

        // Populate labs based on selected building
        buildingSelect.addEventListener("change", function () {
            labSelect.innerHTML = '<option value="" disabled selected>Loading labs...</option>';

            setTimeout(() => {
                labSelect.innerHTML = '<option value="" disabled selected>Select a lab</option>';
                const labs = {
                    "Engineering Building": ["Eng Lab 101", "Eng Lab 202"],
                    "Science Hall": ["Sci Lab 301", "Sci Lab 402"],
                    "Technology Center": ["Tech Lab A", "Tech Lab B"]
                };

                labs[this.value].forEach(lab => {
                    const option = new Option(lab, lab);
                    labSelect.appendChild(option);
                });
            }, 500);
        });

        // Generate 30-minute interval time slots from 7 AM to 5 PM
        function generateTimeSlots() {
            const timeSlots = [];
            for (let hour = 7; hour <= 17; hour++) {
                for (let min of [0, 30]) {
                    const formattedHour = hour > 12 ? hour - 12 : hour;
                    const amPm = hour >= 12 ? "PM" : "AM";
                    const formattedTime = `${formattedHour}:${min === 0 ? "00" : "30"} ${amPm}`;
                    const value = `${hour}:${min}`;
                    timeSlots.push({ value, formattedTime });
                }
            }
            return timeSlots;
        }

        // Populate start time dropdown
        function populateStartTimes() {
            const slots = generateTimeSlots();
            slots.forEach(slot => {
                const option = new Option(slot.formattedTime, slot.value);
                startTimeSelect.appendChild(option);
            });
        }

        // Update end time dropdown based on selected start time
        startTimeSelect.addEventListener("change", function () {
            endTimeSelect.innerHTML = '<option value="" disabled selected>Select end time</option>';
            const selectedTime = startTimeSelect.value;
            const slots = generateTimeSlots();

            // Filter end times to be later than selected start time
            slots.forEach(slot => {
                if (slot.value > selectedTime) {
                    const option = new Option(slot.formattedTime, slot.value);
                    endTimeSelect.appendChild(option);
                }
            });
        });

        populateStartTimes();

        // Placeholder logic for reserve button
        document.getElementById("reserveButton").addEventListener("click", function () {
            alert("Reservation logic will be implemented here.");
        });
    });
</script>
</body>
